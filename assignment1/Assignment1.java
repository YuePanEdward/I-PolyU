/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment1;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 20153
 */
public class Assignment1 extends javax.swing.JFrame {

    /**
     * Creates new form Assignment1
     */ 
    Data data=new Data();
    int wifi=0;
    int GPSon=0;
    int Dataon=0;
    int function=0;
    int calarea=0;// cal. area mode
    static double ta=0.232519,tb=0.559427,tc=836172.6,td=0.669964,te=-0.23046,tf=817984.9;//affine transform parameter I->W
    static double tA=0.537656,tB=1.305935,tC=-1517808,tD=1.563606,tE=-0.54274,tF=-863488.4;//W->I
    int polygonx[]= new int[50];
    int polygony[]= new int[50]; 
    int polygonX[]= new int[50];
    int polygonY[]= new int[50]; 
    int polygonk=0;
    int tempx=0,tempy=0;//temp position 
    public Assignment1() {
        
        initComponents();
        
              
          
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton13 = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("I @ PolyU");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setPreferredSize(new java.awt.Dimension(1620, 790));
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(900, 600));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/CampusMapdown.jpg"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/wifi-off.png"))); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/bb.png"))); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(178, 178, 178))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(191, 191, 191))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/1.png"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton1.setText("Load Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("  by Group 10 ( 17018337X，16055783D，16058723D，16055288D，16055578D )");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel4.setText("Nearby");

        jLabel5.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel5.setText("Where are you?");

        jLabel6.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel6.setText("N");

        jLabel7.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel7.setText("E");

        jButton2.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton2.setText("Get from GPS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/icon1.jpg"))); // NOI18N
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/icon2.jpg"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/icon3.jpg"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/icon4.jpg"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Here", "ZS", "ZN", "Y", "W", "U", "TU", "ST", "QT", "QR", "PQ", "N", "M", "S", "V", "S", "VA", "HJ", "FJ", "GH", "FG", "EF", "DE", "CD", "CF", "BC", "A", "ICON", "P", "R", "Library", "Swimming pool", "Theater", "Hotel", "Plaza", "Bistro 1979", "Main entrance", "Hunghom Hall", "Homantin Hall" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ZS", "ZN", "Y", "W", "U", "TU", "ST", "QT", "QR", "PQ", "N", "M", "S", "V", "S", "VA", "HJ", "FJ", "GH", "FG", "EF", "DE", "CD", "CF", "BC", "A", "ICON", "P", "R", "Library", "Swimming pool", "Theater", "Hotel", "Plaza", "Bistro 1979", "Main entrance", "Hunghom Hall", "Homantin Hall" }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel8.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel8.setText("From");

        jLabel9.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel9.setText("To");

        jButton7.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton7.setText("Go!");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/icon5.jpg"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton9.setText("Clear the Map");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton10.setText("Help");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton11.setText("Show Points");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton12.setText("Cal. Area");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Buxton Sketch", 2, 18)); // NOI18N
        jButton13.setText("Output");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton12)
                                .addGap(18, 18, 18)
                                .addComponent(jButton13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9)
                                .addGap(18, 18, 18)
                                .addComponent(jButton10))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(4, 4, 4)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel7))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextField1)
                                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jLabel4)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(205, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jButton7)
                            .addComponent(jLabel9))
                        .addGap(30, 30, 30)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton12)
                    .addComponent(jButton13))
                .addGap(162, 162, 162))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                //java.io.File myFile= new java.io.File("D:\\PolyU\\LSGI3230A\\LSGI3230A\\ass\\geo-a&p a1\\data1.csv");//load data   you can change the address
                 JFileChooser myFileChooser=new JFileChooser();
        if(myFileChooser.showOpenDialog(null)==JFileChooser.APPROVE_OPTION){   
                java.io.File myFile=myFileChooser.getSelectedFile();
                try (Scanner myInput = new Scanner(myFile)) {
                int i=0;
                String[] textdata=new String[200];
                jTextArea1.append(myFileChooser.getSelectedFile().getPath()+"\n");
                jTextArea1.append("Loading Completed");
                
                while(myInput.hasNext()){
                    textdata[i]=myInput.nextLine();
                    String[]array=textdata[i].split(",");
                    if(i>=0){
                    data.seq[i]=Integer.parseInt(array[0]);
                    data.x[i]=Integer.parseInt(array[3]);
                    data.y[i]=Integer.parseInt(array[4]);
                    data.X[i]=Double.parseDouble(array[1]);
                    data.Y[i]=Double.parseDouble(array[2]);
                    data.district[i]=Integer.parseInt(array[5]);
                    data.name[i]=array[6];
                    data.type[i]=Integer.parseInt(array[7]);
                    }
                    i++;
                 }
                 data.k=i;
             }    catch (FileNotFoundException ex) {
                 Logger.getLogger(Assignment1.class.getName()).log(Level.SEVERE, null, ex);
             }
             Dataon=1;
                //jTextArea1.append(Double.toString(data.X[0]));
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        int mx = evt.getX();
        int my = evt.getY();
        int mX;
        int mY;
        //System.out.println("screen(X,Y) = " + mx + "," + my);
        
        if (mx>=920&&mx<=1170&&my>=155&&my<=300){//Z core
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/6.jpg")));
            if (wifi==1){
                try {  
            URI uri = new URI("http://www.lsgi.polyu.edu.hk/home/index.asp");  
            Desktop.getDesktop().browse(uri);  
            } catch (URISyntaxException e) {  
            e.printStackTrace();  
            } catch (IOException e) {  
            e.printStackTrace();  
              }  
           }
        }
        else if(mx>=910&&mx<=1060&&my>=350&&my<=560){//Y core
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/16.jpg")));
        }
        else if(mx>=780&&mx<=905&&my>=190&&my<=340){//V core
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/17.jpg")));
        }
        else if(mx>=340&&mx<=500&&my>=130&&my<=350){//A core
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/13.jpg")));
        }
        else if(mx>=50&&mx<=310&&my>=420&&my<=660){//ICON
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/12.jpg")));
        }
        else if(mx>=320&&mx<=470&&my>=360&&my<=560){//D
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/3.jpg")));
        }
        else if(mx>=685&&mx<=850&&my>=580&&my<=676){//old hall
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/4.jpg")));
        }
         else if(mx>=1100&&mx<=1200&&my>=570&&my<=675){//new hall
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/5.jpg")));
        }
         else if(mx>=650&&mx<=770&&my>=170&&my<=240){//pool
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/15.jpg")));
        }
         else if(mx>=510&&mx<=610&&my>=320&&my<=475){//L
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/9.jpg")));
             if (wifi==1){
                try {  
            URI uri = new URI("https://www.lib.polyu.edu.hk/");  
            Desktop.getDesktop().browse(uri);  
            } catch (URISyntaxException e) {  
            e.printStackTrace();  
            } catch (IOException e) {  
            e.printStackTrace();  
              }  
           }
        }
        else if(mx>=635&&mx<=770&&my>=245&&my<=345){//VA
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/10.jpg")));
        }
        else if(mx>=605&&mx<=680&&my>=470&&my<=530){//entrance
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/7.jpg")));
        }
        else if(mx>=620&&mx<=700&&my>=346&&my<=420){//M
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/8.jpg")));
        }
        else if(mx>=771&&mx<=870&&my>=350&&my<=425){//commual
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/18.jpg")));
        }
        else if(mx>=780&&mx<=880&&my>=430&&my<=510){//jockery
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/2.jpg")));
        }
        else if(mx>=715&&mx<=765&&my>=355&&my<=450){//MN
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/14.jpg")));
        }
        else if(mx>=495&&mx<=670&&my>=540&&my<=675){//hk
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/11.jpg")));
        }
        else if(mx>=25&&mx<=200&&my>=240&&my<=420&&wifi==1){//small map
            try {  
            URI uri = new URI("http://www.google.cn/maps/@22.3039661,114.1802685,16z?hl=zh-CN");  
            Desktop.getDesktop().browse(uri);  
        } catch (URISyntaxException e) {  
            e.printStackTrace();  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
        }  
        else if(mx>=880&&mx<=1200&&my>=0&&my<=70&&wifi==1){//PolyU web
            try {  
            URI uri = new URI("https://www.polyu.edu.hk/web/en/home/index.html");  
            Desktop.getDesktop().browse(uri);  
        } catch (URISyntaxException e) {  
            e.printStackTrace();  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
        }
        else{//logo
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/1.png")));
                }
        if (GPSon==1){
           //jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/CampusMapdown.jpg")));
           Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
           //gfx.clearRect(tempx-4,tempy-7,9,15);
           gfx.setColor(Color.black);
           String imgpath="D:\\PolyU\\LSGI3230A\\Project 3230\\Assignment lastest version\\src\\assignment1\\icon.png";
           BufferedImage img = null;
            try {
                img = ImageIO.read(new FileInputStream(imgpath));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Assignment1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Assignment1.class.getName()).log(Level.SEVERE, null, ex);
            }
           gfx.drawImage(img, mx-5, my-8,11,17, null);
           //gfx.fillOval(mx-3,my-3,7,7);
           mX=(int)(ta*mx+tb*my+tc);
           mY=(int)(td*mx+te*my+tf);
           jTextField1.setText(Integer.toString(mX));
           jTextField2.setText(Integer.toString(mY));
           GPSon=2; 
           tempx=mx;
           tempy=my;
           function=0;//resume
        }
        if (calarea==1){
                Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();  
                gfx.setColor(Color.red);
                gfx.fillOval(mx-4,my-4,9,9);
                polygonx[polygonk]=mx;
                polygony[polygonk]=my;
                polygonX[polygonk]=(int)(ta*mx+tb*my+tc);
                polygonY[polygonk]=(int)(td*mx+te*my+tf);
                polygonk++;                       
        }

    }//GEN-LAST:event_jPanel1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        GPSon=1;
        jTextArea1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //canteen
        if (GPSon!=0){
            if(Dataon==0) jTextArea1.setText("Please load data first!");
            else{
            //jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/CampusMapdown.jpg")));
            jTextArea1.setText("");
            function=1;//nearby function
           int cX,cY;//current coordinate
           int[] seq=new int[20];
           int[] distance=new int[20];
           int j=0;
           cX=Integer.parseInt(jTextField1.getText());
           cY=Integer.parseInt(jTextField2.getText());
           for(int i=0;i<data.k;i++){
                if (data.type[i]==2){
                    seq[j]=i;
                    distance[j]=(int)Math.sqrt((data.X[i]-cX)*(data.X[i]-cX)+(data.Y[i]-cY)*(data.Y[i]-cY));
                    j++;
                }
           }
           for(int i=0;i<j-1;i++){//bubble sorting
               for(int n=0;n<j-1-i;n++){
                   if(distance[n]>distance[n+1]){
                       int tempbubble=distance[n];
                       distance[n]=distance[n+1];
                       distance[n+1]=tempbubble;
                       int tempbubble2=seq[n];
                       seq[n]=seq[n+1];
                       seq[n+1]=tempbubble2;
                   }
               }
           }
           
           for(int i=0;i<5;i++){
                jTextArea1.append(data.name[seq[i]]+"\t"+distance[i]+"m"+ "\t"+(distance[i]/80+1)+"min"+"\n");
                Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
                gfx.setColor(Color.blue);
                gfx.fillOval(data.x[seq[i]]-5,data.y[seq[i]]-5,11,11);
           }     
    }  
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(Dataon==0) jTextArea1.setText("Please load data first!");
            else{
        jTextArea1.setText("");
        String origin =jComboBox1.getSelectedItem().toString();
        String destination=jComboBox2.getSelectedItem().toString();
        int oid=0,did=0,ox,oy,dx,dy,oX,oY,dX,dY;
        int hall=0;//hall case index
        
        Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
        gfx.setColor(Color.black);
        gfx.setStroke(new BasicStroke(3.0f));//set the width of the line
        
        int distance=0,distance1=0,distance2=0;
        
        if (origin=="Here"){//origin position
            oX=Integer.parseInt(jTextField1.getText());
            oY=Integer.parseInt(jTextField2.getText());
            ox=(int)(tA*oX+tB*oY+tC);
            oy=(int)(tD*oX+tE*oY+tF);
            if ((ox>=1015&&ox<=1175&&oy>=160&&oy<355)||(ox>=925&&ox<=1015&&oy>=160&&oy<=275)) oid=1;//give it a value which is in district 1
            else if((ox>=40&&ox<=355&&oy>=435&&oy<=630))oid=51;//give it a value which is in distric 3
            else oid=10; //give it a value which is in distric 3
        }
        else{
        //hall's circumstance
        if (origin=="Hunghom Hall"){
            oid=53;
            hall=1;
            if(destination=="Hunghom Hall") hall=4;
            if(destination=="Homantin Hall") hall=3;
        }
        else if (origin=="Homantin Hall"){
            oid=6;
            hall=2;
            if(destination=="Hunghom Hall") hall=3;
            if(destination=="Homantin Hall") hall=4;
        }
        else{
        for(int i=0;i<data.k;i++){
            if(data.name[i].equals(origin)){
               oid=i; break;
            }
        }}
        ox=data.x[oid];
        oy=data.y[oid];
        oX=(int)data.X[oid];
        oY=(int)data.Y[oid];
        }
        if (hall<3){
         //hall's circumstance
        if (destination=="Hunghom Hall"){
            did=53;
            hall=-1;
        }
        else if (destination=="Homantin Hall"){
            did=6;
            hall=-2;
        }
        else{
        for(int i=0;i<data.k;i++){//destination position
           if(data.name[i].equals(destination)){
               did=i; break;
           }     
        }}
        dx=data.x[did];
        dy=data.y[did];
        dX=(int)data.X[did];
        dY=(int)data.Y[did];
        
        //draw the route and show the distance
        
        if((data.district[oid]==1&&data.district[did]==2)||(data.district[oid]==2&&data.district[did]==1)){
             //Z_main
          if(data.district[oid]==1){
               gfx.drawLine(ox,oy,data.x[3],data.y[3]);
               gfx.drawLine(dx,dy,data.x[6],data.y[6]);
               distance1=(int)Math.sqrt((data.X[3]-oX)*(data.X[3]-oX)+(data.Y[3]-oY)*(data.Y[3]-oY));
               distance2=(int)Math.sqrt((data.X[6]-dX)*(data.X[6]-dX)+(data.Y[6]-dY)*(data.Y[6]-dY));
          }
          else{
               gfx.drawLine(ox,oy,data.x[6],data.y[6]);
               gfx.drawLine(dx,dy,data.x[3],data.y[3]);
               distance1=(int)Math.sqrt((data.X[6]-oX)*(data.X[6]-oX)+(data.Y[6]-oY)*(data.Y[6]-oY));
               distance2=(int)Math.sqrt((data.X[3]-dX)*(data.X[3]-dX)+(data.Y[3]-dY)*(data.Y[3]-dY));
          }
             
          gfx.drawLine(data.x[3],data.y[3],data.x[4],data.y[4]);
          gfx.drawLine(data.x[4],data.y[4],data.x[5],data.y[5]);
          gfx.drawLine(data.x[5],data.y[5],data.x[6],data.y[6]);
          
          
          int dis_main_Z=(int)Math.sqrt((data.X[3]-data.X[4])*(data.X[3]-data.X[4])+(data.Y[3]-data.Y[4])*(data.Y[3]-data.Y[4]))
                +(int)Math.sqrt((data.X[4]-data.X[5])*(data.X[4]-data.X[5])+(data.Y[4]-data.Y[5])*(data.Y[4]-data.Y[5]))
                +(int)Math.sqrt((data.X[6]-data.X[5])*(data.X[6]-data.X[5])+(data.Y[6]-data.Y[5])*(data.Y[6]-data.Y[5]));
          distance=dis_main_Z+distance1+distance2;
        
        }
           
        else if((data.district[oid]==3&&data.district[did]==2)||(data.district[oid]==2&&data.district[did]==3)){
            //main_ICON
          
        
       
          if(data.district[oid]==3){
               gfx.drawLine(ox,oy,data.x[51],data.y[51]);
               gfx.drawLine(dx,dy,data.x[48],data.y[48]);
               distance1=(int)Math.sqrt((data.X[51]-oX)*(data.X[51]-oX)+(data.Y[51]-oY)*(data.Y[51]-oY));
               distance2=(int)Math.sqrt((data.X[48]-dX)*(data.X[48]-dX)+(data.Y[48]-dY)*(data.Y[48]-dY));
          }
          else{
               gfx.drawLine(ox,oy,data.x[48],data.y[48]);
               gfx.drawLine(dx,dy,data.x[51],data.y[51]);
               distance1=(int)Math.sqrt((data.X[48]-oX)*(data.X[48]-oX)+(data.Y[48]-oY)*(data.Y[48]-oY));
               distance2=(int)Math.sqrt((data.X[51]-dX)*(data.X[51]-dX)+(data.Y[51]-dY)*(data.Y[51]-dY));
          }
             
           gfx.drawLine(data.x[48],data.y[48],data.x[49],data.y[49]);
           gfx.drawLine(data.x[49],data.y[49],data.x[50],data.y[50]);
           gfx.drawLine(data.x[50],data.y[50],data.x[51],data.y[51]);
          
          
          int dis_main_ICON=(int)Math.sqrt((data.X[48]-data.X[49])*(data.X[48]-data.X[49])+(data.Y[48]-data.Y[49])*(data.Y[48]-data.Y[49]))
                +(int)Math.sqrt((data.X[49]-data.X[50])*(data.X[49]-data.X[50])+(data.Y[49]-data.Y[50])*(data.Y[49]-data.Y[50]))
                +(int)Math.sqrt((data.X[50]-data.X[51])*(data.X[50]-data.X[51])+(data.Y[50]-data.Y[51])*(data.Y[50]-data.Y[51]));
          
           distance=dis_main_ICON+distance1+distance2;
        
        }
        
        else if((data.district[oid]==3&&data.district[did]==1)||(data.district[oid]==1&&data.district[did]==3)){
            //Z_ICON
       
          if(data.district[oid]==3){
               gfx.drawLine(ox,oy,data.x[51],data.y[51]);
               gfx.drawLine(dx,dy,data.x[3],data.y[3]);
               distance1=(int)Math.sqrt((data.X[51]-oX)*(data.X[51]-oX)+(data.Y[51]-oY)*(data.Y[51]-oY));
               distance2=(int)Math.sqrt((data.X[3]-dX)*(data.X[3]-dX)+(data.Y[3]-dY)*(data.Y[3]-dY));
          }
          else{
               gfx.drawLine(ox,oy,data.x[3],data.y[3]);
               gfx.drawLine(dx,dy,data.x[51],data.y[51]);
               distance1=(int)Math.sqrt((data.X[3]-oX)*(data.X[3]-oX)+(data.Y[3]-oY)*(data.Y[3]-oY));
               distance2=(int)Math.sqrt((data.X[51]-dX)*(data.X[51]-dX)+(data.Y[51]-dY)*(data.Y[51]-dY));
          }
           gfx.drawLine(data.x[3],data.y[3],data.x[4],data.y[4]);
           gfx.drawLine(data.x[4],data.y[4],data.x[5],data.y[5]);
           gfx.drawLine(data.x[5],data.y[5],data.x[6],data.y[6]);  
           gfx.drawLine(data.x[48],data.y[48],data.x[49],data.y[49]);
           gfx.drawLine(data.x[49],data.y[49],data.x[50],data.y[50]);
           gfx.drawLine(data.x[50],data.y[50],data.x[51],data.y[51]);
           gfx.drawLine(data.x[6],data.y[6],data.x[48],data.y[48]);
          int dis_main_Z=(int)Math.sqrt((data.X[3]-data.X[4])*(data.X[3]-data.X[4])+(data.Y[3]-data.Y[4])*(data.Y[3]-data.Y[4]))
                +(int)Math.sqrt((data.X[4]-data.X[5])*(data.X[4]-data.X[5])+(data.Y[4]-data.Y[5])*(data.Y[4]-data.Y[5]))
                +(int)Math.sqrt((data.X[6]-data.X[5])*(data.X[6]-data.X[5])+(data.Y[6]-data.Y[5])*(data.Y[6]-data.Y[5]));
          int dis_main_ICON=(int)Math.sqrt((data.X[48]-data.X[49])*(data.X[48]-data.X[49])+(data.Y[48]-data.Y[49])*(data.Y[48]-data.Y[49]))
                +(int)Math.sqrt((data.X[49]-data.X[50])*(data.X[49]-data.X[50])+(data.Y[49]-data.Y[50])*(data.Y[49]-data.Y[50]))
                +(int)Math.sqrt((data.X[50]-data.X[51])*(data.X[50]-data.X[51])+(data.Y[50]-data.Y[51])*(data.Y[50]-data.Y[51]));
          int crosscampus=(int)Math.sqrt((data.X[48]-data.X[6])*(data.X[48]-data.X[6])+(data.Y[48]-data.Y[6])*(data.Y[48]-data.Y[6]));
          
           distance=dis_main_ICON+dis_main_Z+crosscampus+distance1+distance2;
        
        }
        else{
         distance=(int)Math.sqrt((dX-oX)*(dX-oX)+(dY-oY)*(dY-oY));
          gfx.drawLine(ox,oy,dx,dy);
        }
        //for different cases when considering the hall
        if(hall==1){
          gfx.drawLine(ox,oy,ox,630); 
          gfx.drawLine(ox,630,790,630); 
          distance+=1200;
        }
         if(hall==2){
          gfx.drawLine(ox,oy,1150,oy); 
          gfx.drawLine(1150,oy,1150,620); 
          distance+=1000;
        }
        if(hall==-1){
          gfx.drawLine(dx,dy,dx,630); 
          gfx.drawLine(dx,630,790,630); 
          distance+=1200;
        }
        if(hall==-2){
          gfx.drawLine(dx,dy,1150,dy); 
          gfx.drawLine(1150,dy,1150,620); 
          distance+=1000;
        }}
        //from hall to hall
        if(hall==3){
           gfx.drawLine(790,625,1150,625); 
           distance=1050;
        }
        //show the distance and time    
        jTextArea1.append("from  "+origin+"  to  "+destination+"    "+distance+" m   "+(distance/80+1)+"min\n");
         function=2;//navigation function
        }  
       
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //shop
           if (GPSon!=0){
           if(Dataon==0) jTextArea1.setText("Please load data first!");
           else{
           jTextArea1.setText("");
           function=1;//nearby function
           int cX,cY;//current coordinate
           int[] seq=new int[20];
           int[] distance=new int[20];
           int j=0;
           cX=Integer.parseInt(jTextField1.getText());
           cY=Integer.parseInt(jTextField2.getText());
           for(int i=0;i<data.k;i++){
                if (data.type[i]==5){
                    seq[j]=i;
                    distance[j]=(int)Math.sqrt((data.X[i]-cX)*(data.X[i]-cX)+(data.Y[i]-cY)*(data.Y[i]-cY));
                    j++;
                }
           }
           for(int i=0;i<j-1;i++){//bubble sorting
               for(int n=0;n<j-1-i;n++){
                   if(distance[n]>distance[n+1]){
                       int tempbubble=distance[n];
                       distance[n]=distance[n+1];
                       distance[n+1]=tempbubble;
                       int tempbubble2=seq[n];
                       seq[n]=seq[n+1];
                       seq[n+1]=tempbubble2;
                   }
               }
           }
           
           for(int i=0;i<1;i++){
                jTextArea1.append(data.name[seq[i]]+"\t"+distance[i]+"m"+ "\t"+(distance[i]/80+1)+"min"+"\n");
                Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
                gfx.setColor(Color.orange);
                 gfx.fillOval(data.x[seq[i]]-5,data.y[seq[i]]-5,11,11);
           }     
    }  
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //bank
           if (GPSon!=0){
            if(Dataon==0) jTextArea1.setText("Please load data first!");
            else{
           jTextArea1.setText("");
           function=1;//nearby function
           int cX,cY;//current coordinate
           int[] seq=new int[20];
           int[] distance=new int[20];
           int j=0;
           cX=Integer.parseInt(jTextField1.getText());
           cY=Integer.parseInt(jTextField2.getText());
           for(int i=0;i<data.k;i++){
                if (data.type[i]==6){
                    seq[j]=i;
                    distance[j]=(int)Math.sqrt((data.X[i]-cX)*(data.X[i]-cX)+(data.Y[i]-cY)*(data.Y[i]-cY));
                    j++;
                }
           }
           for(int i=0;i<j-1;i++){//bubble sorting
               for(int n=0;n<j-1-i;n++){
                   if(distance[n]>distance[n+1]){
                       int tempbubble=distance[n];
                       distance[n]=distance[n+1];
                       distance[n+1]=tempbubble;
                       int tempbubble2=seq[n];
                       seq[n]=seq[n+1];
                       seq[n+1]=tempbubble2;
                   }
               }
           }
           
           for(int i=0;i<1;i++){
                jTextArea1.append(data.name[seq[i]]+"\t"+distance[i]+"m"+ "\t"+(distance[i]/80+1)+"min"+"\n");
                Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
                gfx.setColor(Color.yellow);
                gfx.fillOval(data.x[seq[i]]-5,data.y[seq[i]]-5,11,11);
           }     
    } 
    } 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        //clinic
           if (GPSon!=0){
            if(Dataon==0) jTextArea1.setText("Please load data first!");
            else{
           jTextArea1.setText("");
           function=1;//nearby function
           int cX,cY;//current coordinate
           int[] seq=new int[20];
           int[] distance=new int[20];
           int j=0;
           cX=Integer.parseInt(jTextField1.getText());
           cY=Integer.parseInt(jTextField2.getText());
           for(int i=0;i<data.k;i++){
                if (data.type[i]==7){
                    seq[j]=i;
                    distance[j]=(int)Math.sqrt((data.X[i]-cX)*(data.X[i]-cX)+(data.Y[i]-cY)*(data.Y[i]-cY));
                    j++;
                }
           }
           for(int i=0;i<j-1;i++){//bubble sorting
               for(int n=0;n<j-1-i;n++){
                   if(distance[n]>distance[n+1]){
                       int tempbubble=distance[n];
                       distance[n]=distance[n+1];
                       distance[n+1]=tempbubble;
                       int tempbubble2=seq[n];
                       seq[n]=seq[n+1];
                       seq[n+1]=tempbubble2;
                   }
               }
           }
           
           for(int i=0;i<2;i++){
                jTextArea1.append(data.name[seq[i]]+"\t"+distance[i]+"m"+ "\t"+(distance[i]/80+1)+"min"+"\n");
                Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
                gfx.setColor(Color.red);
                gfx.fillOval(data.x[seq[i]]-5,data.y[seq[i]]-5,11,11);
           }
            }
           }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        //gym
          if (GPSon!=0){
              if(Dataon==0) jTextArea1.setText("Please load data first!");
            else{
           jTextArea1.setText("");
           function=1;//nearby function
           int cX,cY;//current coordinate
           int[] seq=new int[20];
           int[] distance=new int[20];
           int j=0;
           cX=Integer.parseInt(jTextField1.getText());
           cY=Integer.parseInt(jTextField2.getText());
           for(int i=0;i<data.k;i++){
                if (data.type[i]==8){
                    seq[j]=i;
                    distance[j]=(int)Math.sqrt((data.X[i]-cX)*(data.X[i]-cX)+(data.Y[i]-cY)*(data.Y[i]-cY));
                    j++;
                }
           }
           for(int i=0;i<j-1;i++){//bubble sorting
               for(int n=0;n<j-1-i;n++){
                   if(distance[n]>distance[n+1]){
                       int tempbubble=distance[n];
                       distance[n]=distance[n+1];
                       distance[n+1]=tempbubble;
                       int tempbubble2=seq[n];
                       seq[n]=seq[n+1];
                       seq[n+1]=tempbubble2;
                   }
               }
           }
           
           for(int i=0;i<3;i++){
                jTextArea1.append(data.name[seq[i]]+"\t"+distance[i]+"m"+ "\t"+(distance[i]/80+1)+"min"+"\n");
                Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
                gfx.setColor(Color.cyan);
                 gfx.fillOval(data.x[seq[i]]-5,data.y[seq[i]]-5,11,11);
           }
           }  
          }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/CampusMapdown.jpg")));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        int mx = evt.getX();
        int my = evt.getY();
        int mX;
        int mY;
        mX=(int)(ta*mx+tb*my+tc);
        mY=(int)(td*mx+te*my+tf);
        if(mx>=685&&mx<=850&&my>=580&&my<=676){//old hall
            jLabel10.setText("Hung Hom Hall Zone (Unknown Coordinate)");
        }
        //not available due to the map property
        else if(mx>=1100&&mx<=1200&&my>=570&&my<=675){//new hall
            jLabel10.setText("Ho Man Tin Hall Zone (Unknown Coordinate)");
        }
        //not available due to the map property
        else{
        jLabel10.setText("coordinate E:" + mX + " , N: " + mY);}
    }//GEN-LAST:event_jPanel1MouseMoved

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
         if (GPSon!=0){
              if(Dataon==0) jTextArea1.setText("Please load data first!");}
        else{
        jTextArea1.setText("");
        Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
        gfx.setColor(Color.red);
        for(int i=0;i<data.k;i++){
        gfx.fillOval(data.x[i]-3, data.y[i]-3, 7, 7);
        gfx.drawString(Integer.toString(data.seq[i]),data.x[i]-4, data.y[i]-4);
        jTextArea1.setText("Data points have been already shown. ");
        }
              }
    
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
         JFileChooser fc=new JFileChooser();
            FileNameExtensionFilter ft=new FileNameExtensionFilter("Text Files.txt","txt");
            fc.addChoosableFileFilter(ft);
            int returnVal=fc.showSaveDialog(this);
            if(returnVal==javax.swing.JFileChooser.APPROVE_OPTION){
                java.io.File file=fc.getSelectedFile();
                String file_name=file.toString();
                PrintWriter answer=null;
                try{
                    answer=new PrintWriter(file_name+".txt");
                }catch(FileNotFoundException ex){ 
                }
                answer.println("Current position:"+jTextField1.getText()+" , "+jTextField2.getText());
                if(function==2){
                answer.println("Navigation Information:");}
                if(function==1){
                answer.println("Nearby:");
                }
                String outputs[]=jTextArea1.getText().split("\n");
                for(String output:outputs){
                     answer.println(output);
                }
            answer.close();
            JOptionPane.showMessageDialog(null,"THE FILE IS EXPORTED");
            }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        if(wifi==0){
        wifi=1;
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/wifi.png")));}
        else{
            wifi=0;
            jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment1/wifi-off.png")));
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
         if (wifi==1){
                try {  
            URI uri = new URI("https://learn.polyu.edu.hk/webapps/login/");  
            Desktop.getDesktop().browse(uri);  
            } catch (URISyntaxException e) {  
            e.printStackTrace();  
            } catch (IOException e) {  
            e.printStackTrace();  
              }  
           }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        if (calarea==0){
        jTextArea1.setText("Please draw a convex polygon on the map by pinpointing\npoints "
                + "ontinously and then clicking the button 'done'.");
        calarea=1;
        jButton12.setText("Done");
        
        }
        else{
        jButton12.setText("Cal.Area"); 
        calarea=0;
        if(polygonk<2){
              jTextArea1.setText("Not enough points");
        }
        else{
         int area=0;
         polygonk--;
         polygonx[polygonk+1]=polygonx[0];
         polygony[polygonk+1]=polygony[0];
         polygonX[polygonk+1]=polygonX[0];
         polygonY[polygonk+1]=polygonY[0];
         Graphics2D gfx=(Graphics2D)jPanel1.getGraphics();   
         gfx.setColor(Color.red);
         jTextArea1.setText("");
          for(int i=0;i<=polygonk;i++){
            jTextArea1.append("Polygon's"+(i+1)+"point:"+"  E:"+polygonX[i]+" ,N: "+polygonY[i]+"\n");
            area+=polygonX[i]*polygonY[i+1]-polygonX[i+1]*polygonY[i];
            gfx.drawLine(polygonx[i],polygony[i],polygonx[i+1],polygony[i+1]);
        }
        jTextArea1.append("Area of the polygon is  "+area+" m^2");  
        polygonk=0;
        }
    }//GEN-LAST:event_jButton12ActionPerformed
    }
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try {  
            URI uri = new URI("file:///G:/othersoftware/bandicam/output/software%20I@PolyU%20demo.mp4");  
            Desktop.getDesktop().browse(uri);  
            } catch (URISyntaxException e) {  
            e.printStackTrace();  
            } catch (IOException e) {  
            e.printStackTrace();  
              }  
    }//GEN-LAST:event_jButton10ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Assignment1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Assignment1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Assignment1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Assignment1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Assignment1().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
